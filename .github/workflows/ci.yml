
name: CI
run-name: ${{ github.event.inputs.name }}

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      name:
        description: 'Release name'     
        required: true
        default: 'snapshot'
      text:
        description: 'Release description'
        required: true
        default: 'Snapshot build of the main branch'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: coursier/cache-action@v6
    - uses: coursier/setup-action@v1
      with:
        apps: cs scala3 scalafmt
        jvm: graalvm-java21:21.0.2

    - name: Enforce code formatting
      run: make fmt-check

    - name: Enforce code rules
      run: make fix-check

    - name: Test
      run: make test

  jar:
    # ydoc.jar built on linux github runners encountered the following error with JShell:
    # "java.lang.NullPointerException: Cannot invoke "com.sun.tools.javac.code.Scope$StarImportScope.isFilled()" because "tree.starImportScope" is null"
    # (reproduced on 31/07/2024 within image etc/Dockerfile.dev)
    # therefore, we use a windows runner to build the jar
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: coursier/cache-action@v6
      - uses: coursier/setup-action@v1
        with:
          apps: cs scala3 scalafmt
          jvm: graalvm-java21:21.0.2

      - name: Build Jar
        run: make usage\ydoc.jar
  
      - uses: actions/upload-artifact@v4
        with:
          name: ydoc.jar
          path: usage/ydoc.jar
          if-no-files-found: error
          retention-days: 1
  
  binary:
    name: ${{ matrix.os }} native binary
    needs: [jar]
    # only build binaries for releases
    if: github.event_name == 'workflow_dispatch' 
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [ubuntu, windows]
        include:
          - os: windows
            name: windows
          - os: ubuntu
            name: linux
    steps:
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'

      - uses: actions/download-artifact@v4
        with:
          name: ydoc.jar
          path: usage/

      - name: Build native binary from jar
        run: native-image -jar usage/ydoc.jar ydoc-${{ matrix.name }}
      
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: ydoc-${{ matrix.name }}
          path: ydoc-${{ matrix.name }}*
          if-no-files-found: error
          retention-days: 1

  doc-check:
    runs-on: ubuntu-latest
    needs: [jar]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'
      - run: pip install -r etc/requirements.txt # install cram to avoid usage of a full docker image for usage-tests
  
      - uses: actions/download-artifact@v4
        with:
          name: ydoc.jar
          path: usage/

      - name: Check usage tests
        run: make usage-test IN_DOCKER=NO

      - name: Enforce README consistency
        run: make doc-check
  
  release:
    runs-on: ubuntu-latest
    needs: [test, jar, binary, doc-check]
    if: github.event_name == 'workflow_dispatch'
    steps:
    - uses: actions/download-artifact@v4
      with:
        name: ydoc.jar
        path: usage/

    - uses: actions/download-artifact@v4
      with:
        name: ydoc-linux
        path: bin/

    - uses: actions/download-artifact@v4
      with:
        name: ydoc-windows
        path: bin/

    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        name: ${{ github.event.inputs.name }}
        tag_name: ${{ github.event.inputs.name }}
        target_commitish: main
        body: ${{ github.event.inputs.text }}
        token: ${{ secrets.GITHUB_TOKEN }}
        files: |
          usage/ydoc.jar
          bin/ydoc-linux
          bin/ydoc-windows.exe
